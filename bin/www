#!/usr/bin/env node
var debug  = require('debug')('Echo')
var app    = require('../app')

app.set('port', process.env.PORT || 80)

var mongoose = require('mongoose')
mongoose.connect('mongodb://localhost:27017')

var server = require('http').Server(app)

var io = require('socket.io')(server)

server.listen(app.get('port'))

io.on('connection', function (socket) {
  function roomIsEmpty(roomID) {
    return io.sockets.clients(roomID).length < 1
  }
  socket.on('logged-in', function (userID, friends) {
    console.log('User logged in: '+ userID)
    socket.join(userID)

    friends.forEach(function (friend) {
      if (!roomIsEmpty(friend)) {
        socket.emit('friendLogin', friend)
      }
    })
  })

  socket.on('callOffer', function (senderID, receiverID) {
    console.log('Call Offer sent from: '+senderID+' to: '+receiverID)
    if (!roomIsEmpty) {
      socket.broadcast.to(senderID).emit('userOffline')
    }
    else {
      socket.broadcast.to(receiverID).emit('callOffer', senderID)
    }
  })

  socket.on('callAccepted', function (senderID, receiverID) {
    console.log('Call Accepted to: '+senderID+' from: '+receiverID)
    socket.broadcast.to(senderID).emit('callAccepted', receiverID)
  })

  socket.on('callRejected', function (senderID, receiverID) {
    console.log('Call Rejected to: '+senderID+' from: '+receiverID)
    socket.broadcast.to(senderID).emit('callRejected', receiverID)
  })
})
